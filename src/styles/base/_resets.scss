/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}

/*
  2. Remove default margin
*/
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html {
  font-family: 'Poppins', sans-serif;
  /* background-color: #f3f3f3; */
  // background-color: var(--clr-secondary-700);
  /* 10px / 16px = 0.625 = 62.5% */
  /* Percentage of user's browser font-size setting */
  font-size: 62.5%;
  overflow-x: hidden;
}

/*
  3. Allow percentage-based heights in the application
*/
html,
body {
  height: 100%;
}

/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/

//  the width property is set to be the minimum of either 100% of the viewport width minus 4 rem, or 55 characters, whichever is smaller. This ensures that the element remains responsive and adjusts its width according to the available space, but it won't exceed 55 characters in width.


/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/*
  7. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}

/*
  8. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}


.btn {
  display: inline-block;
  background-color: var(--clr-secondary-300);
  font-size: 1.6rem;
  font-family: inherit;
  font-weight: 500;
  border: none;
  padding: 1.15rem 3.85rem;
  border-radius: 15px;
  cursor: pointer;
  transition: all 0.3s;
  color: rgb(28, 28, 27);
}


/*
  9. Create a root stacking context
*/
// #root,
// #__next {
//   isolation: isolate;
// }